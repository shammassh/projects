Food_1 As screen:
    OnVisible: |-
        =// Retrieve the JSON response from your data source
        Set(
            varResponseJSON,
            LookUp(
                'Survey Responses List',
                'Document Number' = NewDocumentNumber,
                ResponseJSON
            )
        );
        
        If(
              Or(
                varResponseJSON = "[]",  // Check if it's an empty JSON array
                IsBlank(varResponseJSON)  // Check if it's blank (empty string)
            ),
          // Case 1: Initialize new collection (no quotes for new columns)
            ClearCollect(
                colFoodAnswers,
                AddColumns(
                    'Food Storage and Dry Storage',
                    SelectedChoice, "",
                    comment, "",
                    correctedaction, "",
                    Priority, "",
                    Picture, "",
                    Value,0,
                    SelectedCr,""
                )
            )
            ,
          // Case 2: Load existing JSON (no quotes for JSON properties)
         
          ClearCollect(
          colFoodAnswers,
            ForAll(
                ParseJSON(varResponseJSON),
                {
                Answer: Text(ThisRecord!Answer),
                Title: Text(ThisRecord!Title), // Access properties with ! and convert to text
                Coeff: Value(ThisRecord!Coeff), // Convert to number
                SelectedChoice: Text(ThisRecord!SelectedChoice),
                comment: Text(ThisRecord!comment),
                correctedaction: Text(ThisRecord!correctedaction),
                Priority: Text(ThisRecord!Priority),
                Picture: Text(ThisRecord!Picture),
                SelectedCr: Text(ThisRecord!SelectedCr),//only for Dropdown we need to add the defult and the loading 
                cr: Text(ThisRecord!cr),//only for Dropdown we need to add the defult and the loading 
        
                // New calculated Value field
                Value: Switch(
                    Text(ThisRecord!SelectedChoice),
                    "Yes", Value(ThisRecord!Coeff),
                    "Partially", Value(ThisRecord!Coeff) / 2,
                    "No", 0,
                    "NA", Blank()
                )
                }
            )
          );
          
        );
        
        // OnVisible of the screen
        Set(
            foodScore,
            If(
                IsBlank(Sum(Filter(colFoodAnswers, !IsBlank(Value)), Coeff)), 
                0,  // Return 0 if the sum of Coeff is zero to avoid division by zero
                Sum(
                    Filter(colFoodAnswers, !IsBlank(Value)),  // Only include records where Value is not blank
                    Value  // Sum of values
                ) * 100 / Sum(
                    Filter(colFoodAnswers, !IsBlank(Value)),  // Only include records where Value is not blank
                    Coeff  // Sum of coefficients
                )
            )
        );
        
        Set(currentPageIndex, 1);

    Header1_14 As Header:
        Align: =Align.Left
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(166, 215, 153, 1)
        Height: =48
        IsLogoVisible: =false
        OnSelectLogo: =false
        Style: ='Header.Style'.Light
        Title: ="Food Storage and Dry Storage"
        TitleRole: =""
        UserEmail: =User().Email
        UserImage: =User().Image
        UserImageAltText: =User().FullName &" profile picture"
        UserName: =User().FullName
        Width: =Parent.Width
        X: =0
        Y: =0
        ZIndex: =1

    Icon3_14 As icon.Save:
        Color: =RGBA(106, 122, 127, 1)
        Height: =49
        Icon: =Icon.Save
        OnSelect: |-
            =ForAll(
               colFoodAnswers,
               Patch(
                  'Food Storage and Dry Storage',
                  LookUp('Food Storage and Dry Storage', ID = colFoodAnswers[@ID]),
                  {
                     cr: colFoodAnswers[@cr]
                  }
               )
            );
            
            Navigate(PolicesndProcedure);
        Width: =42
        X: =1187
        ZIndex: =2

    Icon4_11 As icon.Home:
        Color: =RGBA(106, 122, 127, 1)
        Height: =41
        Icon: =Icon.Home
        OnSelect: =Navigate('Food Safety Checklist')
        Width: =42
        X: =1240
        ZIndex: =3

    TextCanvas5_13 As Text:
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(255, 255, 255, 1)
        FontColor: =RGBA(106, 122, 127, 1)
        Height: =33
        Text: |
            =$"Score " & Text(foodScore, "[$-en-US]0.00")
        Width: =103
        X: =1076
        Y: =8
        ZIndex: =4

    Label3_1 As label:
        BorderColor: =RGBA(214, 221, 224, 1)
        Color: =RGBA(53, 61, 63, 1)
        DisabledBorderColor: =RGBA(92, 37, 4, 1)
        Fill: =RGBA(255, 255, 255, 1)
        Height: =30
        Text: =NewDocumentNumber
        VerticalAlign: =VerticalAlign.Bottom
        Width: =114
        X: =912
        Y: =9
        ZIndex: =5

    "txtStoreName_2 As 'Text input'":
        DisplayMode: |-
            =If(
                !IsBlank(txtStoreName_2.Value),
                DisplayMode.Disabled, // Disable the input if the Text Input is not empty
                DisplayMode.Edit // Allow editing if the Text Input is empty
            )
        Height: =30
        Value: =""
        Width: =135
        X: =397
        Y: =11
        ZIndex: =6

    "txtStoreName_3 As 'Text input'":
        AccessibleLabel: =""
        Align: =""
        Appearance: ="FilledDarker"
        BorderStyle: =""
        ContentLanguage: =""
        DisplayMode: |-
            =If(
                !IsBlank(txtStoreName_3.Value),
                DisplayMode.Disabled, // Disable the input if the Text Input is not empty
                DisplayMode.Edit // Allow editing if the Text Input is empty
            )
        Font: =""
        FontItalic: =false
        FontSize: =0
        FontStrikethrough: =false
        FontUnderline: =false
        FontWeight: =""
        Height: =30
        MaxLength: =-1
        Mode: ="SingleLine"
        OnChange: =false
        Placeholder: =""
        Required: =false
        TabIndex: =0
        Tooltip: =""
        TriggerOutput: ="FocusOut"
        Type: ="Text"
        ValidationState: ="None"
        Value: =""
        Visible: =true
        Width: =135
        X: =602
        Y: =11
        ZIndex: =7

    TextCanvas6_2 As Text:
        DisplayMode: =DisplayMode.Edit
        Height: =24
        Text: ="Store Name"
        Weight: ='TextCanvas.Weight'.Bold
        Width: =88
        X: =309
        Y: =17
        ZIndex: =8

    TextCanvas6_3 As Text:
        Align: ="Start"
        AutoHeight: =false
        BorderStyle: =""
        ContentLanguage: =""
        DisplayMode: =DisplayMode.Edit
        Font: =""
        FontItalic: =false
        FontStrikethrough: =false
        FontUnderline: =false
        Height: =24
        Size: =14
        TabIndex: =0
        Text: ="Cycle"
        Tooltip: =""
        VerticalAlign: =""
        Visible: =true
        Weight: ='TextCanvas.Weight'.Bold
        Width: =88
        Wrap: =true
        X: =549
        Y: =17
        ZIndex: =9

    "Gallery1_13 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(214, 221, 224, 1)
        BorderStyle: =BorderStyle.Dotted
        BorderThickness: =
        DelayItemLoading: =true
        Height: =636
        Items: =colFoodAnswers
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =2
        TemplateSize: =112
        Width: =1366
        Y: =48
        ZIndex: =10

        "IMg As gallery.'BrowseLayout_Vertical_OneImageTwoColumnVariant_ver5.0'":
            DelayItemLoading: =true
            Height: =112
            Items: |
                =Split(ThisItem.Picture, ";")
                    
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =4
            TemplateSize: =104
            Width: =1296
            WrapCount: =2
            X: =66
            ZIndex: =1

            Image3 As image:
                Height: =Parent.TemplateHeight
                Image: |
                    =ThisItem.Value
                ImagePosition: =ImagePosition.Fill
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                Width: =Parent.TemplateWidth
                ZIndex: =1

        Radio3_13 As radio:
            Color: =RGBA(40, 134, 222, 1)
            Default: |-
                =LookUp(
                  colFoodAnswers, 
                  Title = ThisItem.Title,  // Match the current question
                  SelectedChoice           // Show the saved answer
                )
            FontWeight: =FontWeight.Bold
            Items: =Split(ThisItem.Answer, ",")
            Layout: =Layout.Horizontal
            LineHeight: =0.9
            OnSelect: |-
                =// OnSelect property of Radio3
                Patch(
                    colFoodAnswers,
                    LookUp(
                        colFoodAnswers,
                        Title = ThisItem.Title
                    ),
                    {
                        SelectedChoice: Radio3_13.Selected.Value,
                        Value: Switch(
                            Radio3_13.Selected.Value,  // Now it can reference the existing SelectedChoice
                            "Yes", ThisItem.Coeff,
                            "Partially", ThisItem.Coeff / 2,
                            "No", 0,
                            "NA", Blank()
                        )
                    }
                );
                // OnVisible of the screen
                Set(
                    foodScore,
                    If(
                        IsBlank(Sum(Filter(colFoodAnswers, !IsBlank(Value)), Coeff)), 
                        0,  // Return 0 if the sum of Coeff is zero to avoid division by zero
                        Sum(
                            Filter(colFoodAnswers, !IsBlank(Value)),  // Only include records where Value is not blank
                            Value  // Sum of values
                        ) * 100 / Sum(
                            Filter(colFoodAnswers, !IsBlank(Value)),  // Only include records where Value is not blank
                            Coeff  // Sum of coefficients
                        )
                    )
                );
            RadioSelectionFill: =RGBA(166, 215, 153, 1)
            Size: =10
            TabIndex: =10
            Width: =293
            X: =286
            ZIndex: =2

        RectangleBox_13 As rectangle:
            BorderColor: =RGBA(214, 221, 224, 1)
            BorderThickness: =If(ThisItem.IsSelected,3,1)
            Fill: =Color.Transparent
            OnSelect: =Select(Parent)
            Width: =1362
            ZIndex: =3

        Image1_13 As image:
            Image: =ThisItem.Picture
            X: =1047
            ZIndex: =4

        AttachControl_3 As attachments:
            BorderColor: =Color.Black
            Height: =100
            IsInDataCard: =true
            Items: =
            OnAddFile: |
                =// Step 1: Upload all new attachments
                ForAll(
                    Self.Attachments,
                    Collect(
                        colUploadedImages,
                        UploadImagetoSharepointV2.Run({
                            file: {
                                contentBytes: ThisRecord.Value,
                                name: ThisRecord.Name
                            }
                        }).mylink
                    )
                );
                
                // Step 2: Update this item's Picture list with all uploaded links
                Patch(
                    colFoodAnswers,
                    LookUp(colFoodAnswers, Title = ThisItem.Title),
                    {
                        Picture: Concat(colUploadedImages, Value & ";")
                    }
                );
                
                // Step 3: Clear the temporary collection
                Clear(colUploadedImages);
            PaddingBottom: =5
            PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
            PaddingRight: =5
            PaddingTop: =5
            Tooltip: =
            Width: =99
            X: =1147
            ZIndex: =5

        Dropdown3_13 As dropdown:
            Default: |-
                =LookUp(
                  colFoodAnswers, 
                  Title = ThisItem.Title,  // Match the current question
                  SelectedCr           // Show the saved answer
                )
            HoverFill: =RGBA(166, 215, 153, 1)
            Items: =Split(Trim(ThisItem.cr), ",")
            OnChange: |-
                =// OnSelect property of Radio3
                Patch(
                    colFoodAnswers,
                    LookUp(
                        colFoodAnswers,
                        Title = ThisItem.Title
                    ),
                    {
                        SelectedCr: Dropdown3_13.Selected.Value
                    }
                );
            OnSelect: |-
                =// OnSelect property of Radio3
                Patch(
                    colFoodAnswers,
                    LookUp(
                        colFoodAnswers,
                        Title = ThisItem.Title
                    ),
                    {
                        SelectedCr: Dropdown3_13.Selected.Value
                    }
                );
            Tooltip: =
            Visible: =false
            Width: =287
            X: =703
            Y: =16
            ZIndex: =6

        Label7_1 As label:
            OnSelect: =Select(Parent)
            Text: =ThisItem.SelectedCr
            X: =1047
            Y: =16
            ZIndex: =7

        Dropdown1_13 As dropdown:
            Default: |-
                =LookUp(
                  colFoodAnswers, 
                  Title = ThisItem.Title,  // Match the current question
                  Priority           // Show the saved answer
                )
            Items: |-
                =Table({ Value:"Low" }, { Value:"Medium" }, { Value:"High" })
            OnChange: |-
                =// OnSelect property of Dropdown1
                Patch(
                    colFoodAnswers,
                    LookUp(
                        colFoodAnswers,
                        Title = ThisItem.Title
                    ),
                    {Priority: Dropdown1_13.Selected.Value}
                )
            OnSelect: =
            Width: =121
            X: =579
            Y: =20
            ZIndex: =8

        Title1_13 As label:
            AutoHeight: =true
            Color: =RGBA(0, 0, 0, 1)
            Font: =Font.Arial
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =64
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: =ThisItem.Title
            VerticalAlign: =VerticalAlign.Top
            Width: =268
            X: =18
            Y: =34
            ZIndex: =9

        TextCanvas3_13 As Text:
            DisplayMode: =DisplayMode.Edit
            Height: =27
            Text: =ThisItem.Value
            Visible: =true
            Width: =37
            X: =1272
            Y: =41
            ZIndex: =10

        TextInput2_13 As text:
            Default: =ThisItem.Title
            Height: =51
            HintText: ="Corrective action"
            OnChange: |-
                =// OnSelect property of Textinput2
                Patch(
                  colFoodAnswers,
                  LookUp(colFoodAnswers, Title = ThisItem.Title),
                  {
                     correctedaction: TextInput2_13.Text }
                 
                )
            OnSelect: =
            Width: =444
            X: =703
            Y: =5
            ZIndex: =11

        TextInput1_13 As text:
            Default: |-
                =LookUp(
                  colFoodAnswers, 
                  Title = ThisItem.Title,  // Match the current question
                  comment           // Show the saved answer
                )
            HintText: ="Comments"
            OnChange: |-
                =// OnSelect property of Textinput2
                Patch(
                  colFoodAnswers,
                  LookUp(colFoodAnswers, Title = ThisItem.Title),
                  {
                     comment: TextInput1_13.Text }
                 
                )
                 
            OnSelect: |
                =// OnSelect property of Textinput1
                Patch(
                  colFoodAnswers,
                  LookUp(colFoodAnswers, Title = ThisItem.Title),
                  {
                     comment: TextInput1_13.Text }
                 
                )
            Width: =290
            X: =700
            Y: =60
            ZIndex: =12

        Subtitle1_13 As label:
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Coeff
            VerticalAlign: =VerticalAlign.Top
            Visible: =false
            Width: =Title1_13.Width
            X: =Title1_13.X
            Y: =91
            ZIndex: =13

    Icon7_12 As icon.NextArrow:
        Color: =RGBA(106, 122, 127, 1)
        Icon: =Icon.NextArrow
        OnSelect: |-
            =
            Navigate(Fridges);
        X: =1302
        Y: =701
        ZIndex: =11

    TextCanvas4_13 As Text:
        DisplayMode: =DisplayMode.Edit
        Height: =32
        Text: ="Page " & currentPageIndex
        Width: =96
        X: =602
        Y: =733
        ZIndex: =12

